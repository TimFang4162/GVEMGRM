// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// rcpp_gvemgrm
Rcpp::List rcpp_gvemgrm(const arma::Mat<int>& y, const arma::Col<int>& R, arma::mat old_A, arma::mat old_B, arma::mat old_sig, arma::mat old_ksi1, arma::mat old_ksi2, const arma::Mat<int> Mod, const int is_sigmaknown, const int max_iter, const double tol_n2vlb, const double tol_para, const int stop_cri, const int is_calcu_n2vlb);
RcppExport SEXP _GVEMGRM_rcpp_gvemgrm(SEXP ySEXP, SEXP RSEXP, SEXP old_ASEXP, SEXP old_BSEXP, SEXP old_sigSEXP, SEXP old_ksi1SEXP, SEXP old_ksi2SEXP, SEXP ModSEXP, SEXP is_sigmaknownSEXP, SEXP max_iterSEXP, SEXP tol_n2vlbSEXP, SEXP tol_paraSEXP, SEXP stop_criSEXP, SEXP is_calcu_n2vlbSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::Mat<int>& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const arma::Col<int>& >::type R(RSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type old_A(old_ASEXP);
    Rcpp::traits::input_parameter< arma::mat >::type old_B(old_BSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type old_sig(old_sigSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type old_ksi1(old_ksi1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type old_ksi2(old_ksi2SEXP);
    Rcpp::traits::input_parameter< const arma::Mat<int> >::type Mod(ModSEXP);
    Rcpp::traits::input_parameter< const int >::type is_sigmaknown(is_sigmaknownSEXP);
    Rcpp::traits::input_parameter< const int >::type max_iter(max_iterSEXP);
    Rcpp::traits::input_parameter< const double >::type tol_n2vlb(tol_n2vlbSEXP);
    Rcpp::traits::input_parameter< const double >::type tol_para(tol_paraSEXP);
    Rcpp::traits::input_parameter< const int >::type stop_cri(stop_criSEXP);
    Rcpp::traits::input_parameter< const int >::type is_calcu_n2vlb(is_calcu_n2vlbSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_gvemgrm(y, R, old_A, old_B, old_sig, old_ksi1, old_ksi2, Mod, is_sigmaknown, max_iter, tol_n2vlb, tol_para, stop_cri, is_calcu_n2vlb));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_iwgvemgrm
Rcpp::List rcpp_iwgvemgrm(const arma::Mat<int>& y, const arma::Col<int>& R, arma::mat old_A, arma::mat old_B, arma::mat old_sig, const arma::mat& mu_n, const arma::cube& sigma_n, const arma::Mat<int>& Mod, const int is_sigmaknown, const int S, const int M, const double beta1, const double beta2, const double eta_A, const double eta_gam, const double eta_sig, const double eps, const int max_iter, const double tol_para);
RcppExport SEXP _GVEMGRM_rcpp_iwgvemgrm(SEXP ySEXP, SEXP RSEXP, SEXP old_ASEXP, SEXP old_BSEXP, SEXP old_sigSEXP, SEXP mu_nSEXP, SEXP sigma_nSEXP, SEXP ModSEXP, SEXP is_sigmaknownSEXP, SEXP SSEXP, SEXP MSEXP, SEXP beta1SEXP, SEXP beta2SEXP, SEXP eta_ASEXP, SEXP eta_gamSEXP, SEXP eta_sigSEXP, SEXP epsSEXP, SEXP max_iterSEXP, SEXP tol_paraSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::Mat<int>& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const arma::Col<int>& >::type R(RSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type old_A(old_ASEXP);
    Rcpp::traits::input_parameter< arma::mat >::type old_B(old_BSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type old_sig(old_sigSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type mu_n(mu_nSEXP);
    Rcpp::traits::input_parameter< const arma::cube& >::type sigma_n(sigma_nSEXP);
    Rcpp::traits::input_parameter< const arma::Mat<int>& >::type Mod(ModSEXP);
    Rcpp::traits::input_parameter< const int >::type is_sigmaknown(is_sigmaknownSEXP);
    Rcpp::traits::input_parameter< const int >::type S(SSEXP);
    Rcpp::traits::input_parameter< const int >::type M(MSEXP);
    Rcpp::traits::input_parameter< const double >::type beta1(beta1SEXP);
    Rcpp::traits::input_parameter< const double >::type beta2(beta2SEXP);
    Rcpp::traits::input_parameter< const double >::type eta_A(eta_ASEXP);
    Rcpp::traits::input_parameter< const double >::type eta_gam(eta_gamSEXP);
    Rcpp::traits::input_parameter< const double >::type eta_sig(eta_sigSEXP);
    Rcpp::traits::input_parameter< const double >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< const int >::type max_iter(max_iterSEXP);
    Rcpp::traits::input_parameter< const double >::type tol_para(tol_paraSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_iwgvemgrm(y, R, old_A, old_B, old_sig, mu_n, sigma_n, Mod, is_sigmaknown, S, M, beta1, beta2, eta_A, eta_gam, eta_sig, eps, max_iter, tol_para));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_GVEMGRM_rcpp_gvemgrm", (DL_FUNC) &_GVEMGRM_rcpp_gvemgrm, 14},
    {"_GVEMGRM_rcpp_iwgvemgrm", (DL_FUNC) &_GVEMGRM_rcpp_iwgvemgrm, 19},
    {NULL, NULL, 0}
};

RcppExport void R_init_GVEMGRM(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
